<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roy.mapper.FriendsInfoMapper">
  <resultMap id="BaseResultMap" type="com.roy.model.FriendsInfo">
  <!--
    WARNING - @mbg.generated
    This element is automatically generated by MyBatis Generator, do not modify.
  -->
  <id column="fid" jdbcType="BIGINT" property="fid" />
  <result column="qno" jdbcType="BIGINT" property="qno" />
  <result column="fno" jdbcType="BIGINT" property="fno" />
  <result column="sid" jdbcType="BIGINT" property="sid" />
  <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  <result column="attach" jdbcType="VARCHAR" property="attach" />
  <collection property="subGroup" ofType="com.roy.model.SubGroup">
    <id column="sid" jdbcType="BIGINT" property="sid" />
    <result column="qno" jdbcType="BIGINT" property="qno" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="attach" jdbcType="VARCHAR" property="attach" />
  </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    fid, qno, fno, sid, add_time, attach
  </sql>
  <select id="selectByExample" parameterType="com.roy.model.FriendsInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friends_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from friends_info
    where fid = #{fid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from friends_info
    where fid = #{fid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.roy.model.FriendsInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from friends_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.roy.model.FriendsInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into friends_info (fid, qno, fno, sid,
    add_time, attach)
    values (#{fid,jdbcType=BIGINT}, #{qno,jdbcType=BIGINT}, #{fno,jdbcType=BIGINT}, #{sid,jdbcType=BIGINT},
    #{addTime,jdbcType=TIMESTAMP}, #{attach,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.roy.model.FriendsInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into friends_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="qno != null">
        qno,
      </if>
      <if test="fno != null">
        fno,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="attach != null">
        attach,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=BIGINT},
      </if>
      <if test="qno != null">
        #{qno,jdbcType=BIGINT},
      </if>
      <if test="fno != null">
        #{fno,jdbcType=BIGINT},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=BIGINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.roy.model.FriendsInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from friends_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update friends_info
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=BIGINT},
      </if>
      <if test="record.qno != null">
        qno = #{record.qno,jdbcType=BIGINT},
      </if>
      <if test="record.fno != null">
        fno = #{record.fno,jdbcType=BIGINT},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=BIGINT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attach != null">
        attach = #{record.attach,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update friends_info
    set fid = #{record.fid,jdbcType=BIGINT},
    qno = #{record.qno,jdbcType=BIGINT},
    fno = #{record.fno,jdbcType=BIGINT},
    sid = #{record.sid,jdbcType=BIGINT},
    add_time = #{record.addTime,jdbcType=TIMESTAMP},
    attach = #{record.attach,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.roy.model.FriendsInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update friends_info
    <set>
      <if test="qno != null">
        qno = #{qno,jdbcType=BIGINT},
      </if>
      <if test="fno != null">
        fno = #{fno,jdbcType=BIGINT},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=BIGINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attach != null">
        attach = #{attach,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.roy.model.FriendsInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update friends_info
    set qno = #{qno,jdbcType=BIGINT},
    fno = #{fno,jdbcType=BIGINT},
    sid = #{sid,jdbcType=BIGINT},
    add_time = #{addTime,jdbcType=TIMESTAMP},
    attach = #{attach,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=BIGINT}
  </update>

  <select id="selectFriendsByQno" parameterType="com.roy.model.FriendsInfo"  resultMap="BaseResultMap">
    <!--select f.*,s.*,(select user_info.nick_name from user_info where user_info.qno = f.fno) as friendName-->
      select f.*,s.*
      from user_info u,friends_info f,subgroup s
    where (u.qno=#{qno,jdbcType=BIGINT} and u.qno=f.qno and s.sid = f.sid and (f.attach = '1')) order by s.sid;
  </select>
</mapper>